// Generated by CoffeeScript 1.4.0
(function() {
  var canvas, gl, parseShaderError;

  parseShaderError = function(error) {
    var index, indexEnd, lineError, lineNum, parsed;
    while ((error.length > 1) && (error.charCodeAt(error.length - 1) < 32)) {
      error = error.substring(0, error.length - 1);
    }
    parsed = [];
    index = 0;
    while (index >= 0) {
      index = error.indexOf("ERROR: 0:", index);
      if (index < 0) {
        break;
      }
      index += 9;
      indexEnd = error.indexOf(':', index);
      if (indexEnd > index) {
        lineNum = parseInt(error.substring(index, indexEnd));
        index = indexEnd + 1;
        indexEnd = error.indexOf("ERROR: 0:", index);
        lineError = indexEnd > index ? error.substring(index, indexEnd) : error.substring(index);
        parsed.push({
          line: lineNum - 1,
          message: lineError
        });
      }
    }
    return parsed;
  };

  canvas = document.createElement("canvas");

  gl = canvas.getContext("experimental-webgl");

  module.exports = function(src) {
    var compiled, log, shader;
    shader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(shader, src);
    gl.compileShader(shader);
    compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
    if (!compiled) {
      log = gl.getShaderInfoLog(shader);
      return parseShaderError(log);
    } else {
      return {};
    }
  };

}).call(this);
